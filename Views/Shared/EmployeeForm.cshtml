@model Rosly.ViewModels.EmployeeFormViewModel

@{
    ViewBag.Title = "Create";
}

<h2>@Model.Heading</h2>

@using (Html.BeginForm(Model.Action, "Employees"))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @*@Html.EditorFor(model => model.Id, new {htmlAttributes = new {@class = "form-control hide"}})
        @Html.ValidationMessageFor(model => model.Id, "", new {@class = "text-danger hide"})*@
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.NewEmployeeFlag)
        @Html.HiddenFor(model => model.CourseId)
        @*@Html.EditorFor(model => model.CourseId, new {htmlAttributes = new {@class = "form-control hide"}})
        @Html.ValidationMessageFor(model => model.CourseId, "", new {@class = "text-danger hide"})*@
        @*</div>*@
    </div>

    <div class="form-group">
        @*@Html.EditorFor(model => model.NewEmployeeFlag, new {htmlAttributes = new {@class = "form-control hide"}})
        @Html.ValidationMessageFor(model => model.NewEmployeeFlag, "", new {@class = "text-danger hide"})*@
        @*</div>*@
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, "Last Name")
        @*<div class="col-md-10">*@
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        @*</div>*@
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, "First Name")
        @*<div class="col-md-10">*@
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        @*</div>*@
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, "Email")
        @*<div class="col-md-10">*@
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        @*</div>*@
    </div>

    if (Model.Action.Equals("Update") || Model.Action.Equals("Create") || Model.Action.Equals("EnrollAndCreate"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.BusUnit, "Business Unit")
            @*<div class="col-md-10">*@
            @Html.DropDownListFor(m => m.BusUnit, new SelectList(Model.BusUnits, "name", "name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BusUnit, "", new { @class = "text-danger" })
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CostCent, "Cost Center")
            @*<div class="col-md-10">*@
            @Html.EditorFor(model => model.CostCent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostCent, "", new { @class = "text-danger" })
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CubeLocation, "Cube Location")
            @*<div class="col-md-10">*@
            @Html.EditorFor(model => model.CubeLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CubeLocation, "", new { @class = "text-danger" })
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area)
            @*<div class="col-md-10">*@
            @Html.DropDownListFor(m => m.Area, new SelectList(Model.Areas, "area", "area"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Area, "", new { @class = "text-danger" })
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeId, "Employee Id")
            @*<div class="col-md-10">*@
            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
            @*</div>*@
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    }

    if (Model.Action.Equals("Enroll"))
    {
        <button class="btn btn-primary js-enroll">Save and Enroll</button>
    }

}

<div>
    @Html.ActionLink("Back to List", "Index", "Employees")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            $(".hide").hide();
        })
    </script>
}